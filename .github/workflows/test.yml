name: Test
on:
  push:
    branches:
      - master
  pull_request:
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_ACCESS_KEY_SECRET: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
  AWS_URL: ${{ secrets.AWS_URL }}
  ALIYUN_ACCESS_KEY_ID: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
  ALIYUN_ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
  ALIYUN_BUCKET: ${{ secrets.ALIYUN_BUCKET }}
  ALIYUN_URL: ${{ secrets.ALIYUN_URL }}
  ALIYUN_ENDPOINT: ${{ secrets.ALIYUN_ENDPOINT }}
  TENCENT_ACCESS_KEY_ID: ${{ secrets.TENCENT_ACCESS_KEY_ID }}
  TENCENT_ACCESS_KEY_SECRET: ${{ secrets.TENCENT_ACCESS_KEY_SECRET }}
  TENCENT_URL: ${{ secrets.TENCENT_URL }}
  MINIO_ACCESS_KEY_ID: ${{ secrets.MINIO_ACCESS_KEY_ID }}
  MINIO_ACCESS_KEY_SECRET: ${{ secrets.MINIO_ACCESS_KEY_SECRET }}
  MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}
  CLOUDINARY_ACCESS_KEY_ID: ${{ secrets.CLOUDINARY_ACCESS_KEY_ID }}
  CLOUDINARY_ACCESS_KEY_SECRET: ${{ secrets.CLOUDINARY_ACCESS_KEY_SECRET }}
  CLOUDINARY_CLOUD: ${{ secrets.CLOUDINARY_CLOUD }}
jobs:
  ubuntu:
    strategy:
      matrix:
        go: [ "1.23", "1.24" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Go mod cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install dependencies
        run: go mod tidy
      - name: Run tests
        run: go test -timeout 5m -v ./...
